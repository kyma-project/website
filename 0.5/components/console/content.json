{
  "id": "console",
  "displayName": "Console",
  "description": "Overall documentation for Console",
  "type": "Components",
  "docs": [
    {
      "order": "001-overview-console",
      "title": "Overview",
      "type": "Overview",
      "source": "<p>The Console is a web-based administrative UI for Kyma. It allows you to administer the Kyma functionality and manage the basic Kubernetes resources.</p>\n<p>The Console uses the Luigi framework to extend the UI functionality with custom micro front-ends and bring more functionality to the existing UI. You can define the micro front-ends using dedicated Custom Resource Definitions (CRDs).</p>\n<p>Use the following CRs to extend the Console UI:</p>\n<ul>\n<li>The MicroFrontend custom resource allows you to plug in micro front-ends for a specific Environment.</li>\n<li>The ClusterMicroFrontend custom resource allows you to plug in micro front-ends for the entire Cluster.</li>\n</ul>\n"
    },
    {
      "order": "010-details-uiextensibility",
      "title": "UI extensibility",
      "type": "Details",
      "source": "<p>The Kyma Console UI uses the <a href=\"https://github.com/kyma-project/luigi\" target=\"_blank\">Luigi framework</a> to allow you to seamlessly extend the UI content with custom micro front-ends.</p>\n<h2 id=\"console-ui-interaction-with-micro-front-ends\">Console UI interaction with micro front-ends</h2>\n<p>When rendering the navigation, the Kyma Console UI calls a dedicated API endpoint to check if there are any micro front-ends defined in the current context. The current context comprises the current Environment and all global cluster micro front-ends. All the defined micro front-ends and cluster micro front-ends are mapped to the navigation model as navigation nodes with remote <strong>viewUrls</strong>. When you click the navigation node, the system loads the content of the micro front-end into the content area of the Console. At the same time, the Console sends the current context data to the micro front-end to ensure it is initialized properly.</p>\n<h2 id=\"micro-front-end\">Micro front-end</h2>\n<p>A micro front-end is a standalone web application which is developed, tested and deployed independently from the Kyma Console application. It uses the Luigi Client library to ensure proper communication with the Console application. When you implement and deploy a micro front-end, you can plug it to the Kyma Console as a UI extension using dedicated Custom Resource Definitions. </p>\n<h3 id=\"luigi-client\">Luigi Client</h3>\n<p>The Luigi Client enables communication between the micro front-end and the Console application.\nInclude <a href=\"https://www.npmjs.com/package/@kyma-project/luigi-client\" target=\"_blank\">Luigi Client</a> in the micro front-end&#39;s codebase as an npm dependency.</p>\n<pre><code>npm i @kyma-project/luigi-client\n</code></pre><p>It helps to read the context data that is sent by the Console when the user activates the micro front-end in the UI. \nUse the following example to read the context data:</p>\n<pre><code>LuigiClient.addInitListener((data)=&gt;{\n    // do stuff with the context data\n});\n</code></pre><p>The Luigi Client facilitates communication between the micro front-end and the Console. Use the Luigi Client API to request the Console to navigate from the micro front-end to any other route available in the application:</p>\n<pre><code>LuigiClient.linkManager().navigate(&#39;/targetRoute&#39;, null, true)\n</code></pre><p>For API details, see <a href=\"https://github.com/kyma-project/luigi/blob/master/docs/luigi-client-api.md\" target=\"_blank\">Luigi Client API documentation</a>.</p>\n<h2 id=\"add-a-micro-front-end\">Add a micro front-end</h2>\n<p>Use the Custom Resource Definitions to extend the Console functionality and configure different scopes for your micro front-ends.</p>\n<h3 id=\"micro-front-end-for-a-specific-environment\">Micro front-end for a specific Environment</h3>\n<p>You can define a micro front-end visible only in the context of a specific Environment (Namespace).</p>\n<p><a href=\"assets/mf-namespaced.yaml\">Here</a> you can find a sample micro front-end entity using the <strong>namespace</strong> metadata attribute to enable the micro front-end <strong>only</strong> for the production Environment.</p>\n<p>Using this yaml file in your Kyma cluster results in a <strong>Tractors Overview</strong> micro front-end navigation node displayed under the <strong>Hardware</strong> category. It is available <strong>only</strong> in the production Environment.</p>\n<p><img src=\"assets/mf-one-namespace.png\" alt=\"MF-one-environment\"></p>\n<h3 id=\"cluster-wide-micro-front-end\">Cluster-wide micro front-end</h3>\n<p>You can define a cluster-wide micro front-end available for all Environments in the side navigation.</p>\n<p><a href=\"assets/cmf-environment.yaml\">Here</a> you can find a sample ClusterMicroFrontend entity using the <code>environment</code> value for the <strong>placement</strong> attribute to make the micro front-end available for all Environments in the cluster. </p>\n<p>Using this yaml file in your Kyma cluster results in a <strong>Tractors Overview</strong> micro front-end navigation node displayed under the <strong>Hardware</strong> category. It is available <strong>for every</strong> Environment in your cluster.</p>\n<h3 id=\"cluster-wide-micro-front-end-for-the-administration-section\">Cluster-wide micro front-end for the administration section</h3>\n<p>You can define a cluster micro front-end visible in the <strong>Administration</strong> section of the Console.</p>\n<p><a href=\"assets/cmf-cluster.yaml\">Here</a> you can find a sample of such ClusterMicroFrontend entity using the <code>cluster</code> value for placement  <strong>attribute</strong> to ensure the micro front-end is visible in the <strong>Administration</strong> section.</p>\n<p><img src=\"assets/cmf-admin-section.png\" alt=\"CMF-admin-section\"></p>\n"
    },
    {
      "order": "021-cr-microfrontend",
      "title": "MicroFrontend",
      "type": "Custom Resource",
      "source": "<p>The <code>microfrontend.ui.kyma-project.io</code> custom resource definition (CRD) is a detailed description of the kind of data and the format used to extend the Kyma Console. It allows to extend the Console for the specific Namespace. To get the up-to-date CRD and show the output in the <code>yaml</code> format, run this command:</p>\n<pre><code>kubectl get crd microfrontends.ui.kyma-project.io -o yaml\n</code></pre><h2 id=\"sample-custom-resource\">Sample custom resource</h2>\n<p>This is a sample CR that extends the Console. </p>\n<pre><code class=\"lang-yaml\">apiVersion: ui.kyma-project.io/v1alpha1\nkind: MicroFrontend\nmetadata:\n  name: sample-microfrontend\n  namespace: production\nspec:\n  version: 0.0.1\n  category: Sample Category\n  viewBaseUrl: https://sample-microfrontend-url.com\n  navigationNodes:\n    - label: Sample List\n      navigationPath: items\n      viewUrl: /\n    - label: Details\n      navigationPath: items/:id\n      showInNavigation: false\n      viewUrl: /:id\n</code></pre>\n<p>This table lists all the possible parameters of a given resource together with their descriptions:</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">Field</th>\n<th style=\"text-align:center\">Mandatory?</th>\n<th style=\"text-align:left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><strong>metadata.name</strong></td>\n<td style=\"text-align:center\"><strong>YES</strong></td>\n<td style=\"text-align:left\">Specifies the name of the CR.</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>metadata.namespace</strong></td>\n<td style=\"text-align:center\"><strong>YES</strong></td>\n<td style=\"text-align:left\">Specifies the target Namespace (Environment) for the CR.</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>spec.version</strong></td>\n<td style=\"text-align:center\"><strong>NO</strong></td>\n<td style=\"text-align:left\">Specifies the version of the micro front-end.</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>spec.category</strong></td>\n<td style=\"text-align:center\"><strong>NO</strong></td>\n<td style=\"text-align:left\">Specifies the category name under which the micro front-end appears in the navigation.</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>spec.viewBaseUrl</strong></td>\n<td style=\"text-align:center\"><strong>YES</strong></td>\n<td style=\"text-align:left\">Specifies the address of the micro front-end. The address has to begin with <code>https://</code>.</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>spec.navigationNodes</strong></td>\n<td style=\"text-align:center\"><strong>YES</strong></td>\n<td style=\"text-align:left\">The list of navigation nodes specified for the micro front-end.</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>spec.navigationNodes.label</strong></td>\n<td style=\"text-align:center\"><strong>YES</strong></td>\n<td style=\"text-align:left\">Specifies the name used to display the micro front-end&#39;s node in the Console UI.</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>spec.navigationNodes.navigationPath</strong></td>\n<td style=\"text-align:center\"><strong>NO</strong></td>\n<td style=\"text-align:left\">Specifies the path used for routing within the Console.</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>spec.navigationNodes.viewUrl</strong></td>\n<td style=\"text-align:center\"><strong>NO</strong></td>\n<td style=\"text-align:left\">Specifies the URL used to display the content of a micro front-end.</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>spec.navigationNodes.showInNavigation</strong></td>\n<td style=\"text-align:center\"><strong>NO</strong></td>\n<td style=\"text-align:left\">The Boolean that specifies if the micro front-end&#39;s node is visible in the navigation or not.</td>\n</tr>\n</tbody>\n</table>\n"
    },
    {
      "order": "022-cr-clustermicrofrontend",
      "title": "ClusterMicroFrontend",
      "type": "Custom Resource",
      "source": "<p>The <code>clustermicrofrontend.ui.kyma-project.io</code> custom resource definition (CRD) is a detailed description of the kind of data and the format used to extend the Kyma Console. It allows to extend the Console for the entire Cluster. To get the up-to-date CRD and show the output in the <code>yaml</code> format, run this command:</p>\n<pre><code>kubectl get crd clustermicrofrontends.ui.kyma-project.io -o yaml\n</code></pre><h2 id=\"sample-custom-resource\">Sample custom resource</h2>\n<p>This is a sample CR that extends the Console. </p>\n<pre><code class=\"lang-yaml\">apiVersion: ui.kyma-project.io/v1alpha1\nkind: ClusterMicroFrontend\nmetadata:\n  name: sample-microfrontend\nspec:\n  version: 0.0.1\n  category: category-name\n  viewBaseUrl: https://sample-microfrontend-url.com\n  placement: cluster\n  navigationNodes:\n    - label: Sample List\n      navigationPath: items\n      viewUrl: /\n    - label: Details\n      navigationPath: items/:id\n      showInNavigation: false\n      viewUrl: /:id\n</code></pre>\n<p>This table lists all the possible parameters of a given resource together with their descriptions:</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">Field</th>\n<th style=\"text-align:center\">Mandatory?</th>\n<th style=\"text-align:left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><strong>metadata.name</strong></td>\n<td style=\"text-align:center\"><strong>YES</strong></td>\n<td style=\"text-align:left\">Specifies the name of the CR.</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>spec.version</strong></td>\n<td style=\"text-align:center\"><strong>NO</strong></td>\n<td style=\"text-align:left\">Specifies the version of the cluster micro front-end.</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>spec.category</strong></td>\n<td style=\"text-align:center\"><strong>NO</strong></td>\n<td style=\"text-align:left\">Defines the category name under which the cluster micro front-end appears in the navigation.</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>spec.viewBaseUrl</strong></td>\n<td style=\"text-align:center\"><strong>YES</strong></td>\n<td style=\"text-align:left\">Specifies the address of the cluster micro front-end. The address has to begin with <code>https://</code>.</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>spec.placement</strong></td>\n<td style=\"text-align:center\"><strong>NO</strong></td>\n<td style=\"text-align:left\">Specifies if the cluster micro front-end should be visible in the Environment navigation or settings navigation. The placement value has to be either <code>environment</code> or <code>cluster</code>.</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>spec.navigationNodes</strong></td>\n<td style=\"text-align:center\"><strong>YES</strong></td>\n<td style=\"text-align:left\">The list of navigation nodes specified for the cluster micro front-end.</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>spec.navigationNodes.label</strong></td>\n<td style=\"text-align:center\"><strong>YES</strong></td>\n<td style=\"text-align:left\">Specifies the name used to display the cluster micro front-end&#39;s node in the Console UI.</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>spec.navigationNodes.navigationPath</strong></td>\n<td style=\"text-align:center\"><strong>NO</strong></td>\n<td style=\"text-align:left\">Specifies the path that is used for routing within the Console.</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>spec.navigationNodes.viewUrl</strong></td>\n<td style=\"text-align:center\"><strong>NO</strong></td>\n<td style=\"text-align:left\">Specifies the URL used to display the content of the cluster micro-front end.</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>spec.navigationNodes.showInNavigation</strong></td>\n<td style=\"text-align:center\"><strong>NO</strong></td>\n<td style=\"text-align:left\">The Boolean that specifies if the cluster micro front-end&#39;s node is visible in the navigation or not.</td>\n</tr>\n</tbody>\n</table>\n"
    }
  ]
}
