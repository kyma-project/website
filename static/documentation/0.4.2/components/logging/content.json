{
  "id": "logging",
  "displayName": "Logging",
  "description": "Overal documentation for Logging",
  "type": "Components",
  "docs": [
    {
      "order": "001-overview-logging",
      "title": "Overview",
      "source": "<p>Logging in Kyma uses <a href=\"https://github.com/gliderlabs/logspout\" target=\"_blank\">Logspout</a> and <a href=\"https://github.com/oklog/oklog\" target=\"_blank\">OK Log</a>. Logspout is a log router for Docker containers that runs inside Docker. It attaches to each container on a host and routes their logs to a Log Management System. OK Log is a distributed coordination-free log management system. It is a lightweight solution which is not only easy to understand but also easy to operate.</p>\n"
    },
    {
      "order": "010-details-access-oklog",
      "title": "Access OK Log",
      "type": "Details",
      "source": "<p>To access the OK Log UI, follow these steps:</p>\n<ol>\n<li>Run the following command to configure port forwarding:</li>\n</ol>\n<pre><code>kubectl port-forward -n kyma-system svc/core-logging-oklog 7650:7650\n</code></pre><ol>\n<li><p>Access the OK Log UI at <code>http://localhost:7650</code>.</p>\n</li>\n<li><p>Use a plaintext or regular expression to pull up logs from OK Log. For example, <code>pod.name:core-kubeless</code>.</p>\n</li>\n</ol>\n"
    },
    {
      "order": "020-architecture-logging",
      "title": "Architecture",
      "source": "<p>This document outlines the logging architecture of Kyma. It highlights information sources from which Logspout extracts logs to feed to OK Log.</p>\n<p>Logspout is deployed as a stateless Daemonset and shares <code>/var/run/docker.sock</code> from the node. It then feeds the logs to OK Log through the ingest API.</p>\n<p>OK Log is deployed as a Statefulset. It is capable for storing the logs for 7 days, which is a configurable property. Read more on OK Log architectural decisions <a href=\"https://github.com/oklog/oklog/tree/master/doc/arch\" target=\"_blank\">here</a>.</p>\n"
    }
  ]
}
