{
  "id": "authorization-and-authentication",
  "displayName": "Authorization and Authentication",
  "description": "Authorization and authentication in Kyma",
  "type": "Components",
  "docs": [
    {
      "order": "001-overview-authorization-and-authentication",
      "title": "Overview",
      "source": "<p>The security model in Kyma uses the Service Mesh component to enforce authorization through <a href=\"https://kubernetes.io/docs/reference/access-authn-authz/rbac/\" target=\"_blank\">Kubernetes Role Based Authentication</a> (RBAC) in the cluster. The identity federation is managed through <a href=\"https://github.com/coreos/dex\" target=\"_blank\">Dex</a>, which is an open-source, OpenID Connect identity provider.</p>\n<p>Dex implements a system of connectors that allow you to delegate authentication to external OpenID Connect and SAML2-compliant Identity Providers and use their user stores. Read the <strong>Add an Identity Provider to Dex</strong> document to learn how to enable authentication with an external Identity Provider by using a Dex connector.</p>\n<p>Out of the box, Kyma comes with its own static user store used by Dex to authenticate users. This solution is designed for use with local Kyma deployments as it keeps the predefined users&#39; credentials in an easily available ConfigMap file.\nRead the <strong>Manage static users in Dex</strong> document to learn how to manage users in the static store used by Dex.</p>\n<p>Kyma uses a group-based approach to managing authorizations.\nTo give users that belong to a group access to resources in Kyma, you must create:</p>\n<ul>\n<li>Role and RoleBinding - for resources in a given Namespace or Environment.</li>\n<li>ClusterRole and ClusterRoleBinding - for resources available in the entire cluster.</li>\n</ul>\n<p>The RoleBinding or ClusterRoleBinding must have a group specified as their subject.\nSee <a href=\"https://kubernetes.io/docs/reference/access-authn-authz/rbac/\" target=\"_blank\">this</a> document to learn how to manage Roles and RoleBindings.</p>\n<blockquote>\n<p><strong>NOTE:</strong> You cannot define groups for the static user store. Instead, bind the user directly to a role or a cluster role by setting the user as the subject of a RoleBinding or ClusterRoleBinding.</p>\n</blockquote>\n<p>The system creates two default roles in every Environment:</p>\n<ul>\n<li><code>kyma-admin-role</code> - this role gives the user full access to the Environment.</li>\n<li><code>kyma-reader-role</code> - this role gives the user the right to read all resources in the given Environment.</li>\n</ul>\n<p>For more details about Environments, read the <strong>Environments</strong> document in the <strong>Kyma</strong> topic.</p>\n<blockquote>\n<p><strong>NOTE:</strong> The <strong>Global permissions</strong> section in the <strong>Administration</strong> view of the Kyma Console UI allows you to manage user-group bindings.</p>\n</blockquote>\n"
    },
    {
      "order": "003-architecture-auth",
      "title": "Architecture",
      "source": "<p>The following diagram illustrates the authorization and authentication flow in Kyma. The representation assumes the Kyma Console UI as the user&#39;s point of entry.</p>\n<p><img src=\"./assets/001-kyma-authorization.png\" alt=\"authorization-authentication-flow\"></p>\n<ol>\n<li>The user opens the Kyma Console UI. If the Console application doesn&#39;t find a JWT token in the browser session storage, it redirects the user&#39;s browser to the Open ID Connect (OIDC) provider, Dex.</li>\n<li>Dex lists all defined Identity Provider connectors to the user. The user selects the Identity Provider to authenticate with. After successful authentication, the browser is redirected back to the OIDC provider which issues a JWT token to the user. After obtaining the token, the browser is redirected back to the Console UI. The Console UI stores the token in the Session Storage and uses it for all subsequent requests.</li>\n<li>The Console UI requests for a list of cluster resources in Environments from the API Server. The API Server is not accessible directly. The request is routed through the API Server Proxy - a simple Nginx reverse proxy exposed through an Istio Ingress.</li>\n<li>The request arrives at the Kubernetes API Server. The Kubernetes API Server validates the JWT token it received and directs the request accordingly if the validation is successful.</li>\n</ol>\n<blockquote>\n<p><strong>NOTE:</strong> The Kubernetes API Server can verify JWT tokens issued by Dex because Dex is registered as a trusted issuer through OIDC parameters during the Kyma installation.  </p>\n</blockquote>\n"
    },
    {
      "order": "004-details-kubecofig-generator",
      "title": "Kubeconfig generator",
      "type": "Details",
      "source": "<p>The Kubeconfig generator is a proprietary tool that generates a <code>kubeconfig</code> file which allows the user to access the Kyma cluster through the Command Line Interface (CLI), and to manage the connected cluster within the permission boundaries of the user.</p>\n<p>The Kubeconfig generator rewrites the ID token issued for the user by Dex into the generated <code>kubeconfig</code> file. The time to live (TTL) of the ID token is 24 hours, which effectively means that the TTL of the generated <code>kubeconfig</code> file is 24 hours as well.</p>\n<p>The generator is a publicly exposed service. You can access it directly under the <code>https://configurations-generator.{YOUR_CLUSTER_DOMAIN}</code> address. The service requires a valid ID token issued by Dex to return a code <code>200</code> result.</p>\n<h2 id=\"get-the-kubeconfig-file-and-configure-the-cli\">Get the kubeconfig file and configure the CLI</h2>\n<p>Follow these steps to get the <code>kubeconfig</code> file and configure the CLI to connect to the cluster:</p>\n<ol>\n<li>Access the Console UI of your Kyma cluster.</li>\n<li>Click <strong>Administration</strong>.</li>\n<li>Click the <strong>Download config</strong> button to download the <code>kubeconfig</code> file to a selected location on your machine.</li>\n<li>Open a terminal window.</li>\n<li><p>Export the <code>KUBECONFIG</code> environment variable to point to the downloaded <code>kubeconfig</code>. Run this command:</p>\n<pre><code>export KUBECONFIG={path_to_downloaded_kubeconfig}\n</code></pre><blockquote>\n<p><strong>NOTE:</strong> Drag and drop the <code>kubeconfig</code> file in the terminal to easily add the path of the file to the <code>export KUBECONFIG</code> command you run.</p>\n</blockquote>\n</li>\n<li><p>Run <code>kubectl cluster-info</code> to check if the CLI is connected to the correct cluster.</p>\n</li>\n</ol>\n<blockquote>\n<p><strong>NOTE:</strong> Exporting the <code>KUBECONFIG</code> environment variable works only in the context of the given terminal window. If you close the window in which you exported the variable, or if you switch to a new terminal window, you must export the environment variable again to connect the CLI to the desired cluster.</p>\n</blockquote>\n<p>Alternatively, get the <code>kubeconfig</code> file by sending a <code>GET</code> request with a valid ID token issued for the user to the <code>/kube-config</code> endpoint of the <code>https://configurations-generator.{YOUR_CLUSTER_DOMAIN}</code> service. For example:</p>\n<pre><code>curl GET https://configurations-generator.{YOUR_CLUSTER_DOMAIN}/kube-config -H &quot;Authorization: Bearer {VALID_ID_TOKEN}&quot;\n</code></pre>"
    },
    {
      "order": "005-details-add-connector",
      "title": "Add an Identity Provider to Dex",
      "type": "Details",
      "source": "<p>Add external, OpenID Connect compliant authentication providers to Kyma using <a href=\"https://github.com/coreos/dex#connectors\" target=\"_blank\">Dex connectors</a>. Follow the instructions below to add a GitHub connector and use it to authenticate users in Kyma.</p>\n<blockquote>\n<p><strong>NOTE:</strong> Groups in the Github are represented as teams. See <a href=\"https://help.github.com/articles/organizing-members-into-teams/\" target=\"_blank\">this</a> document to learn how to manage teams in Github.</p>\n</blockquote>\n<h2 id=\"prerequisites\">Prerequisites</h2>\n<p>To add a GitHub connector to Dex, <a href=\"https://github.com/settings/applications/new\" target=\"_blank\">register</a> a new OAuth application in GitHub. Set the authorization callback URL to <code>https://dex.kyma.local/callback</code>.\nAfter you complete the registration, <a href=\"https://help.github.com/articles/requesting-organization-approval-for-oauth-apps/\" target=\"_blank\">request</a> for an organization approval.</p>\n<blockquote>\n<p><strong>NOTE:</strong> To authenticate in Kyma using GitHub, the user must be a member of a GitHub <a href=\"https://help.github.com/articles/creating-a-new-organization-from-scratch/\" target=\"_blank\">organization</a> that has at least one <a href=\"https://help.github.com/articles/creating-a-team/\" target=\"_blank\">team</a>.</p>\n</blockquote>\n<h2 id=\"configure-dex\">Configure Dex</h2>\n<p>Register the GitHub Dex connector by editing the <code>dex-config-map.yaml</code> ConfigMap file located in the <code>kyma/resources/dex/templates</code> directory. Follow this template:</p>\n<pre><code>    connectors:\n    - type: github\n      id: github\n      name: GitHub\n      config:\n        clientID: {GITHUB_CLIENT_ID}\n        clientSecret: {GITHUB_CLIENT_SECRET}\n        redirectURI: https://dex.kyma.local/callback\n        orgs:\n          - name: {GITHUB_ORGANIZATION}\n</code></pre><p>This table explains the placeholders used in the template:</p>\n<table>\n<thead>\n<tr>\n<th>Placeholder</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>GITHUB_CLIENT_ID</td>\n<td>Specifies the application&#39;s client ID.</td>\n</tr>\n<tr>\n<td>GITHUB_CLIENT_SECRET</td>\n<td>Specifies the application&#39;s client Secret.</td>\n</tr>\n<tr>\n<td>GITHUB_ORGANIZATION</td>\n<td>Specifies the name of the GitHub organization.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"configure-authorization-rules\">Configure authorization rules</h2>\n<p>To bind Github groups to the default roles added to every Kyma Environment, add the <strong>bindings</strong> section to <a href=\"https://github.com/kyma-project/kyma/blob/master/resources/core/charts/cluster-users/values.yaml\" target=\"_blank\">this</a> file. Follow this template:</p>\n<pre><code>bindings:\n  kymaAdmin:\n    groups:\n    - &quot;{GITHUB_ORGANIZATION}:{GITHUB_TEAM_A}&quot;\n  kymaView:\n    groups:\n    - &quot;{GITHUB_ORGANIZATION}:{GITHUB_TEAM_B}&quot;\n</code></pre><p>This table explains the placeholders used in the template:</p>\n<table>\n<thead>\n<tr>\n<th>Placeholder</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>GITHUB_ORGANIZATION</td>\n<td>Specifies the name of the GitHub organization.</td>\n</tr>\n<tr>\n<td>GITHUB_TEAM_A</td>\n<td>Specifies the name of GitHub team to bind to the <code>kyma-admin-role</code> role.</td>\n</tr>\n<tr>\n<td>GITHUB_TEAM_B</td>\n<td>Specifies the name of GitHub team to bind to the <code>kyma-reader-role</code> role.</td>\n</tr>\n</tbody>\n</table>\n"
    },
    {
      "order": "006-details-manage-static-users",
      "title": "Manage static users in Dex",
      "type": "Details",
      "source": "<p>Edit the <code>dex-config-map.yaml</code> ConfigMap file located in the <code>kyma/resources/dex/templates</code> directory to add, update, or remove a user in the static user store.</p>\n<p>To add or update a user, follow this template:</p>\n<pre><code class=\"lang-yaml\">  staticPasswords:\n  - email: {USER_EMAIL}\n    username: {USERNAME}\n    hash: {BCRYPT_HASH_OF_THE_PASSWORD}\n    userID: {USER_ID}\n</code></pre>\n<p>This table explains the placeholders used in the template:</p>\n<table>\n<thead>\n<tr>\n<th>Placeholder</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>USER_EMAIL</td>\n<td>Specifies the user&#39;s email. Should be unique among <strong>staticPasswords</strong> list.</td>\n</tr>\n<tr>\n<td>USERNAME</td>\n<td>Specifies the username. Should be unique among <strong>staticPasswords</strong> list.</td>\n</tr>\n<tr>\n<td>BCRYPT_HASH_OF_THE_PASSWORD</td>\n<td>Specifies <a href=\"https://en.wikipedia.org/wiki/Bcrypt\" target=\"_blank\">bcrypt hash</a> of the user&#39;s password.</td>\n</tr>\n<tr>\n<td>USER_ID</td>\n<td>Specifies the user&#39;s identifier. Should be unique among <strong>staticPasswords</strong> list.</td>\n</tr>\n</tbody>\n</table>\n<p>To remove a user, delete the corresponding entry from the ConfigMap file.</p>\n"
    },
    {
      "order": "011-cr-groups",
      "title": "Group",
      "type": "Custom Resource",
      "source": "<p>The <code>groups.authentication.kyma-project.io</code> Custom Resource Definition (CRD) is a detailed description of the kind of data and the format that represents user groups available in the ID provider in the Kyma cluster. To get the up-to-date CRD and show the output in the <code>yaml</code> format, run this command:</p>\n<pre><code>kubectl get crd groups.authentication.kyma-project.io -o yaml\n</code></pre><h2 id=\"sample-custom-resource\">Sample Custom Resource</h2>\n<p>This is a sample CR that represents an user group available in the ID provider in the Kyma cluster.</p>\n<pre><code>apiVersion: authentication.kyma-project.io/v1alpha1\nkind: Group\nmetadata:\n    name: &quot;sample-group&quot;\nspec:    \n    name: &quot;admins&quot;\n    idpName: &quot;github&quot;\n    description: &quot;&#39;admins&#39; represents the group of users with administrative privileges in the organization.&quot;\n</code></pre><p>This table analyses the elements of the sample CR and the information it contains:</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">Field</th>\n<th style=\"text-align:center\">Mandatory?</th>\n<th style=\"text-align:left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><strong>metadata.name</strong></td>\n<td style=\"text-align:center\"><strong>YES</strong></td>\n<td style=\"text-align:left\">Specifies the name of the CR.</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>spec.name</strong></td>\n<td style=\"text-align:center\"><strong>YES</strong></td>\n<td style=\"text-align:left\">Specifies the name of the group.</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>spec.idpName</strong></td>\n<td style=\"text-align:center\"><strong>YES</strong></td>\n<td style=\"text-align:left\">Specifies the name of the ID provider in which the group exists.</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>spec.description</strong></td>\n<td style=\"text-align:center\"><strong>NO</strong></td>\n<td style=\"text-align:left\">Description of the group available in the ID provider.</td>\n</tr>\n</tbody>\n</table>\n"
    }
  ]
}
